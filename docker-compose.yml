version: "3.7"
services:
  nginx:
    image: nginx:1.25
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    depends_on:
      - backend
      - frontend

  redis:
    image: redis
    ports:
      - 6379:6379

  postgres:
    image: postgres:15
    restart: always
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data:cached
      
  postgres_test:
    image: postgres:15
    restart: always
    environment:
      PYTHONPATH: .
    env_file:
      - .env
    command: -p 5433
    ports:
      - '5433:5433'

  celery:
    build:
      context: backend
      dockerfile: Dockerfile
    env_file:
      - .env
    command: ["/app/scripts/celery.sh", "celery"]  
    depends_on:
      - redis
    volumes:
      - ./backend:/app/:cached


  flower:
    build:
      context: backend
      dockerfile: Dockerfile
    env_file:
      - .env
    command: ["/app/scripts/celery.sh", "flower"]
    ports:
      - 5555:5555
    depends_on:
      - redis
      - celery
    volumes:
      - ./backend:/app/:cached
      

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app/:cached
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    #command: tail -f /dev/null
    command: ["/app/scripts/app.sh"]
    
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    stdin_open: true
    volumes:
      - './frontend:/app:cached'
      - './frontend/node_modules:/app/node_modules:cached'
    environment:
      - NODE_ENV=development
    command: yarn dev 

volumes:
  db-data:
